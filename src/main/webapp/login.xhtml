<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	template="/template/main.xhtml">

	<ui:define name="body">
		<div class="container" style="margin-top: 70px;">
			<div class="col-md-6 col-md-offset-3">
				<div class="panel" style="margin-bottom: 0px;">
					<div class="panel-body text-center">
						<button id="facebook-login" type="button" class="btn btn-primary" style="width: 190px;"><img src="images/facebook.png"/> <strong>Entrar com Facebook</strong></button>
						<button id="google-login" type="button" class="btn btn-danger" style="width: 190px;"><img src="images/google.png"/> <strong>Entrar com Google</strong></button>
					</div>
				</div>
				<p class="seperator">ou</p>
				<div class="panel panel-default">
					<div class="panel-body">
						<form id="form-login" class="form-horizontal" role="form">
							<p>
								<label for="email">E-mail</label>
								<input id="email" type="text" class="form-control input-lg" />
								<div id="email-message" class="label label-danger" />
							</p>
							<p>
								<label for="password">Senha</label>
								<input id="password" type="password" class="form-control input-lg" />
								<div id="password-message" class="label label-danger" />
							</p>
							<p>
								<button id="login" class="btn btn-lg btn-success " type="button">Entrar</button>
							</p>
							<div id="message" class="label label-danger" />
						</form>
					</div>
					<div class="panel-footer text-center">
						<p>
							<a href="register.jsf" class="register-link">Precisa de uma conta? <strong>Registre-se aqui</strong></a> <br /> 
							<a href="reset-password.jsf" class="password-link"><small>Esqueceu sua senha?</small></a>
						</p>
					</div>
				</div>
			</div>
		</div>
		<div class="modal fade" id="modal" tabindex="-1" role="dialog">
			<div style="height:200px">
      			<span id="spin" style="position: absolute; display: block; top: 50%;left: 50%;"></span>
    		</div>
		</div>

		<script src="api/entity/Credentials.js" />

		<h:outputScript name="js/facebook-all.js" />
		<h:outputScript name="js/client-plusone.js" />
		<h:outputScript name="js/jquery-1.10.2.js" />
		<h:outputScript name="js/bootstrap.js" />
		<h:outputScript name="js/spin.js" />
		<h:outputScript name="js/client/auth.js" />
		<h:outputScript name="js/client/facebook-auth.js" />
		<h:outputScript name="js/client/google-auth.js" />

		<script>
			function performLogin() {
				var credentials = new Credentials();
				credentials.email = $("#email").val();
				credentials.password = $("#password").val();

				var client = new AuthClient();
				client.login(credentials, onLoginSuccessful, onLoginFailed);
			}

			function showModal() {
				$('#modal').modal('show');
				var opts = {
						  lines: 11, // The number of lines to draw
						  length: 19, // The length of each line
						  width: 10, // The line thickness
						  radius: 22, // The radius of the inner circle
						  corners: 1, // Corner roundness (0..1)
						  rotate: 0, // The rotation offset
						  direction: 1, // 1: clockwise, -1: counterclockwise
						  color: '#fff', // #rgb or #rrggbb or array of colors
						  speed: 1, // Rounds per second
						  trail: 50, // Afterglow percentage
						  shadow: false, // Whether to render a shadow
						  hwaccel: true, // Whether to use hardware acceleration
						  className: 'spinner', // The CSS class to assign to the spinner
						  zIndex: 2e9, // The z-index (defaults to 2000000000)
						  top: 'auto', // Top position relative to parent in px
						  left: 'auto' // Left position relative to parent in px
						};
				var target = document.getElementById('spin');
				var spinner = new Spinner(opts).spin(target);
			}

			function hideModal() {
				$('#modal').modal('hide');
			}
		
			function onLoginSuccessful(data){
				window.location = "index.jsf";
			}
	
			function onLoginFailed(data){
				switch (data.status) {
					case 412: 
						$.each(data.responseJSON, function(index, value) {
							console.log(value.property + ":" + value.message);
							$("#" + value.property + "-message").html(value.message);
						});
						break;

					case 401: 
						$("#message").html("Usuário ou senha inválidos.");
						break;
					case 403:
						$("#message").html(data.responseText);
						break;
				}
			}

			function onFacebookLoginSuccessful(data){
				FB.logout();
				window.location = "index.jsf";
			}

			function onFacebookLoginFailed(data){
				console.log("login facebook failed");
			}

			function onGoogleLoginSuccessful(data){
				gapi.auth.signOut();
				window.location = "index.jsf";
			}

			function onGoogleLoginFailed(data){
				console.log("login google failed");
			}

			$(function(){
				$("#login").click(function(){
					$("[id$='message']").html("");
					performLogin();
				});
		
				$(document).keypress(function(e) {
					if(e.which == 13) {
						performLogin();
					}
				});

				$("#facebook-login").click(function(){
					showModal();

					FB.init({
						appId	: '548688288560242',
						status	: true,
						cookie	: true,
						xfbml	: true
					});

					FB.login(onFacebookSignIn, {scope: 'email,user_birthday'});
				});

				$("#google-login").click(function(){
					showModal();

					gapi.auth.signIn({
						'clientid': '611475192580-k33ghah4orsl7d4r1r6qml5i4rtgnnrd.apps.googleusercontent.com',
						'cookiepolicy': 'single_host_origin',
						'callback': 'onGoogleSignIn',
						'scope': 'https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile' 
					});
				});
			});

			function onFacebookSignIn(response) {
				if (response.authResponse) {
					$("#form-login input").attr("disabled", true);
					var client = new FacebookAuthClient();
					client.login(response.authResponse.accessToken, onFacebookLoginSuccessful, onFacebookLoginFailed);

			    } else {
			    	hideModal();
			    }
			}

			function onGoogleSignIn(authResult) {
				if (authResult['access_token']) {
					$("#form-login input").attr("disabled", true);
					var client = new GoogleAuthClient();
					client.login(authResult.code, onGoogleLoginSuccessful, onGoogleLoginFailed);

				} else if (authResult['error']) {
			    	//hideModal();
				}
			}
		</script>
	</ui:define>
</ui:composition>
